Useless nonterminals:

   block
   term
   factor
   base
   exponent
   mulops
   addops
   and_or


Terminals which are not used:

   ELIF
   LOG
   POW


State 27 contains 5 shift/reduce conflicts.
State 70 contains 2 shift/reduce conflicts.
State 71 contains 2 shift/reduce conflicts.
State 87 contains 4 shift/reduce conflicts.

Grammar
rule 1    program -> entry '(' ')' '{' body return '}'
rule 2    entry -> datatype ID
rule 3    datatype -> INT
rule 4    datatype -> FLOAT
rule 5    datatype -> CHAR
rule 6    datatype -> BOOL
rule 7    datatype -> STR
rule 8    datatype -> VOID
rule 9    @1 ->		/* empty */
rule 10   body -> IF @1 '(' condition ')' '{' body '}' else
rule 11   body -> statement ';'
rule 12   body -> body body
rule 13   @2 ->		/* empty */
rule 14   body -> PRINT @2 '(' value ')' ';'
rule 15   body -> WHILE '(' condition ')' '{' body '}'
rule 16   @3 ->		/* empty */
rule 17   else -> ELSE @3 '{' body '}'
rule 18   else ->		/* empty */
rule 19   condition -> condition AND condition
rule 20   condition -> condition OR condition
rule 21   condition -> value relop value
rule 22   condition -> TRUE
rule 23   condition -> FALSE
rule 24   condition ->		/* empty */
rule 25   @4 ->		/* empty */
rule 26   statement -> DECLARE datatype ID @4 init
rule 27   @5 ->		/* empty */
rule 28   statement -> ID @5 '=' expression
rule 29   @6 ->		/* empty */
rule 30   statement -> ID @6 relop expression
rule 31   init -> '=' expression
rule 32   init ->		/* empty */
rule 33   expression -> expression arithmetic expression
rule 34   expression -> value
rule 35   arithmetic -> ADD
rule 36   arithmetic -> SUB
rule 37   arithmetic -> MULT
rule 38   arithmetic -> DIV
rule 39   relop -> LT
rule 40   relop -> GT
rule 41   relop -> LE
rule 42   relop -> GE
rule 43   relop -> EQ
rule 44   relop -> NE
rule 45   value -> NUM
rule 46   value -> FLOAT_NUM
rule 47   value -> CHARACTER
rule 48   value -> STR
rule 49   value -> ID
rule 50   value -> TRUE
rule 51   value -> FALSE
rule 52   @7 ->		/* empty */
rule 53   value -> SCAN @7 '(' datatype ')'
rule 54   @8 ->		/* empty */
rule 55   return -> RETURN @8 value ';'
rule 56   return ->		/* empty */

Terminals, with rules where they appear

$ (-1)
'(' (40) 1 10 14 15 53
')' (41) 1 10 14 15 53
';' (59) 11 14 55
'=' (61) 28 31
'{' (123) 1 10 15 17
'}' (125) 1 10 15 17
error (256)
VOID (258) 8
PRINT (259) 14
SCAN (260) 53
IF (261) 10
WHILE (262) 15
ELSE (263) 17
RETURN (264) 55
ELIF (265)
DECLARE (266) 26
ADD (267) 35
SUB (268) 36
MULT (269) 37
DIV (270) 38
LOG (271)
POW (272)
GE (273) 42
LE (274) 41
GT (275) 40
LT (276) 39
EQ (277) 43
NE (278) 44
TRUE (279) 22 50
FALSE (280) 23 51
AND (281) 19
OR (282) 20
INT (283) 3
FLOAT (284) 4
BOOL (285) 6
CHAR (286) 5
NUM (287) 45
FLOAT_NUM (288) 46
ID (289) 2 26 28 30 49
STR (290) 7 48
CHARACTER (291) 47

Nonterminals, with rules where they appear

program (43)
    on left: 1
entry (44)
    on left: 2, on right: 1
datatype (45)
    on left: 3 4 5 6 7 8, on right: 2 26 53
body (46)
    on left: 10 11 12 14 15, on right: 1 10 12 15 17
@1 (47)
    on left: 9, on right: 10
@2 (48)
    on left: 13, on right: 14
else (49)
    on left: 17 18, on right: 10
@3 (50)
    on left: 16, on right: 17
condition (51)
    on left: 19 20 21 22 23 24, on right: 10 15 19 20
statement (52)
    on left: 26 28 30, on right: 11
@4 (53)
    on left: 25, on right: 26
@5 (54)
    on left: 27, on right: 28
@6 (55)
    on left: 29, on right: 30
init (56)
    on left: 31 32, on right: 26
expression (57)
    on left: 33 34, on right: 28 30 31 33
arithmetic (58)
    on left: 35 36 37 38, on right: 33
relop (59)
    on left: 39 40 41 42 43 44, on right: 21 30
value (60)
    on left: 45 46 47 48 49 50 51 53, on right: 14 21 34 55
@7 (61)
    on left: 52, on right: 53
return (62)
    on left: 55 56, on right: 1
@8 (63)
    on left: 54, on right: 55


state 0

    VOID	shift, and go to state 1
    INT 	shift, and go to state 2
    FLOAT	shift, and go to state 3
    BOOL	shift, and go to state 4
    CHAR	shift, and go to state 5
    STR 	shift, and go to state 6

    program	go to state 98
    entry	go to state 7
    datatype	go to state 8



state 1

    datatype  ->  VOID .   (rule 8)

    $default	reduce using rule 8 (datatype)



state 2

    datatype  ->  INT .   (rule 3)

    $default	reduce using rule 3 (datatype)



state 3

    datatype  ->  FLOAT .   (rule 4)

    $default	reduce using rule 4 (datatype)



state 4

    datatype  ->  BOOL .   (rule 6)

    $default	reduce using rule 6 (datatype)



state 5

    datatype  ->  CHAR .   (rule 5)

    $default	reduce using rule 5 (datatype)



state 6

    datatype  ->  STR .   (rule 7)

    $default	reduce using rule 7 (datatype)



state 7

    program  ->  entry . '(' ')' '{' body return '}'   (rule 1)

    '(' 	shift, and go to state 9



state 8

    entry  ->  datatype . ID   (rule 2)

    ID  	shift, and go to state 10



state 9

    program  ->  entry '(' . ')' '{' body return '}'   (rule 1)

    ')' 	shift, and go to state 11



state 10

    entry  ->  datatype ID .   (rule 2)

    $default	reduce using rule 2 (entry)



state 11

    program  ->  entry '(' ')' . '{' body return '}'   (rule 1)

    '{' 	shift, and go to state 12



state 12

    program  ->  entry '(' ')' '{' . body return '}'   (rule 1)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17

    body	go to state 18
    statement	go to state 19



state 13

    body  ->  PRINT . @2 '(' value ')' ';'   (rule 14)

    $default	reduce using rule 13 (@2)

    @2  	go to state 20



state 14

    body  ->  IF . @1 '(' condition ')' '{' body '}' else   (rule 10)

    $default	reduce using rule 9 (@1)

    @1  	go to state 21



state 15

    body  ->  WHILE . '(' condition ')' '{' body '}'   (rule 15)

    '(' 	shift, and go to state 22



state 16

    statement  ->  DECLARE . datatype ID @4 init   (rule 26)

    VOID	shift, and go to state 1
    INT 	shift, and go to state 2
    FLOAT	shift, and go to state 3
    BOOL	shift, and go to state 4
    CHAR	shift, and go to state 5
    STR 	shift, and go to state 6

    datatype	go to state 23



state 17

    statement  ->  ID . @5 '=' expression   (rule 28)
    statement  ->  ID . @6 relop expression   (rule 30)

    $default	reduce using rule 29 (@6)

    @5  	go to state 24
    @6  	go to state 25



state 18

    program  ->  entry '(' ')' '{' body . return '}'   (rule 1)
    body  ->  body . body   (rule 12)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    RETURN	shift, and go to state 26
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17

    $default	reduce using rule 56 (return)

    body	go to state 27
    statement	go to state 19
    return	go to state 28



state 19

    body  ->  statement . ';'   (rule 11)

    ';' 	shift, and go to state 29



state 20

    body  ->  PRINT @2 . '(' value ')' ';'   (rule 14)

    '(' 	shift, and go to state 30



state 21

    body  ->  IF @1 . '(' condition ')' '{' body '}' else   (rule 10)

    '(' 	shift, and go to state 31



state 22

    body  ->  WHILE '(' . condition ')' '{' body '}'   (rule 15)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 33
    FALSE	shift, and go to state 34
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    $default	reduce using rule 24 (condition)

    condition	go to state 40
    value	go to state 41



state 23

    statement  ->  DECLARE datatype . ID @4 init   (rule 26)

    ID  	shift, and go to state 42



state 24

    statement  ->  ID @5 . '=' expression   (rule 28)

    '=' 	shift, and go to state 43



state 25

    statement  ->  ID @6 . relop expression   (rule 30)

    GE  	shift, and go to state 44
    LE  	shift, and go to state 45
    GT  	shift, and go to state 46
    LT  	shift, and go to state 47
    EQ  	shift, and go to state 48
    NE  	shift, and go to state 49

    relop	go to state 50



state 26

    return  ->  RETURN . @8 value ';'   (rule 55)

    $default	reduce using rule 54 (@8)

    @8  	go to state 51



state 27

    body  ->  body . body   (rule 12)
    body  ->  body body .   (rule 12)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17

    PRINT	[reduce using rule 12 (body)]
    IF  	[reduce using rule 12 (body)]
    WHILE	[reduce using rule 12 (body)]
    DECLARE	[reduce using rule 12 (body)]
    ID  	[reduce using rule 12 (body)]
    $default	reduce using rule 12 (body)

    body	go to state 27
    statement	go to state 19



state 28

    program  ->  entry '(' ')' '{' body return . '}'   (rule 1)

    '}' 	shift, and go to state 52



state 29

    body  ->  statement ';' .   (rule 11)

    $default	reduce using rule 11 (body)



state 30

    body  ->  PRINT @2 '(' . value ')' ';'   (rule 14)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 53
    FALSE	shift, and go to state 54
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    value	go to state 55



state 31

    body  ->  IF @1 '(' . condition ')' '{' body '}' else   (rule 10)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 33
    FALSE	shift, and go to state 34
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    $default	reduce using rule 24 (condition)

    condition	go to state 56
    value	go to state 41



state 32

    value  ->  SCAN . @7 '(' datatype ')'   (rule 53)

    $default	reduce using rule 52 (@7)

    @7  	go to state 57



state 33

    condition  ->  TRUE .   (rule 22)
    value  ->  TRUE .   (rule 50)

    AND 	reduce using rule 22 (condition)
    OR  	reduce using rule 22 (condition)
    $default	reduce using rule 50 (value)



state 34

    condition  ->  FALSE .   (rule 23)
    value  ->  FALSE .   (rule 51)

    AND 	reduce using rule 23 (condition)
    OR  	reduce using rule 23 (condition)
    $default	reduce using rule 51 (value)



state 35

    value  ->  NUM .   (rule 45)

    $default	reduce using rule 45 (value)



state 36

    value  ->  FLOAT_NUM .   (rule 46)

    $default	reduce using rule 46 (value)



state 37

    value  ->  ID .   (rule 49)

    $default	reduce using rule 49 (value)



state 38

    value  ->  STR .   (rule 48)

    $default	reduce using rule 48 (value)



state 39

    value  ->  CHARACTER .   (rule 47)

    $default	reduce using rule 47 (value)



state 40

    body  ->  WHILE '(' condition . ')' '{' body '}'   (rule 15)
    condition  ->  condition . AND condition   (rule 19)
    condition  ->  condition . OR condition   (rule 20)

    AND 	shift, and go to state 58
    OR  	shift, and go to state 59
    ')' 	shift, and go to state 60



state 41

    condition  ->  value . relop value   (rule 21)

    GE  	shift, and go to state 44
    LE  	shift, and go to state 45
    GT  	shift, and go to state 46
    LT  	shift, and go to state 47
    EQ  	shift, and go to state 48
    NE  	shift, and go to state 49

    relop	go to state 61



state 42

    statement  ->  DECLARE datatype ID . @4 init   (rule 26)

    $default	reduce using rule 25 (@4)

    @4  	go to state 62



state 43

    statement  ->  ID @5 '=' . expression   (rule 28)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 53
    FALSE	shift, and go to state 54
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    expression	go to state 63
    value	go to state 64



state 44

    relop  ->  GE .   (rule 42)

    $default	reduce using rule 42 (relop)



state 45

    relop  ->  LE .   (rule 41)

    $default	reduce using rule 41 (relop)



state 46

    relop  ->  GT .   (rule 40)

    $default	reduce using rule 40 (relop)



state 47

    relop  ->  LT .   (rule 39)

    $default	reduce using rule 39 (relop)



state 48

    relop  ->  EQ .   (rule 43)

    $default	reduce using rule 43 (relop)



state 49

    relop  ->  NE .   (rule 44)

    $default	reduce using rule 44 (relop)



state 50

    statement  ->  ID @6 relop . expression   (rule 30)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 53
    FALSE	shift, and go to state 54
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    expression	go to state 65
    value	go to state 64



state 51

    return  ->  RETURN @8 . value ';'   (rule 55)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 53
    FALSE	shift, and go to state 54
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    value	go to state 66



state 52

    program  ->  entry '(' ')' '{' body return '}' .   (rule 1)

    $default	reduce using rule 1 (program)



state 53

    value  ->  TRUE .   (rule 50)

    $default	reduce using rule 50 (value)



state 54

    value  ->  FALSE .   (rule 51)

    $default	reduce using rule 51 (value)



state 55

    body  ->  PRINT @2 '(' value . ')' ';'   (rule 14)

    ')' 	shift, and go to state 67



state 56

    body  ->  IF @1 '(' condition . ')' '{' body '}' else   (rule 10)
    condition  ->  condition . AND condition   (rule 19)
    condition  ->  condition . OR condition   (rule 20)

    AND 	shift, and go to state 58
    OR  	shift, and go to state 59
    ')' 	shift, and go to state 68



state 57

    value  ->  SCAN @7 . '(' datatype ')'   (rule 53)

    '(' 	shift, and go to state 69



state 58

    condition  ->  condition AND . condition   (rule 19)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 33
    FALSE	shift, and go to state 34
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    $default	reduce using rule 24 (condition)

    condition	go to state 70
    value	go to state 41



state 59

    condition  ->  condition OR . condition   (rule 20)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 33
    FALSE	shift, and go to state 34
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    $default	reduce using rule 24 (condition)

    condition	go to state 71
    value	go to state 41



state 60

    body  ->  WHILE '(' condition ')' . '{' body '}'   (rule 15)

    '{' 	shift, and go to state 72



state 61

    condition  ->  value relop . value   (rule 21)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 53
    FALSE	shift, and go to state 54
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    value	go to state 73



state 62

    statement  ->  DECLARE datatype ID @4 . init   (rule 26)

    '=' 	shift, and go to state 74

    $default	reduce using rule 32 (init)

    init	go to state 75



state 63

    statement  ->  ID @5 '=' expression .   (rule 28)
    expression  ->  expression . arithmetic expression   (rule 33)

    ADD 	shift, and go to state 76
    SUB 	shift, and go to state 77
    MULT	shift, and go to state 78
    DIV 	shift, and go to state 79

    $default	reduce using rule 28 (statement)

    arithmetic	go to state 80



state 64

    expression  ->  value .   (rule 34)

    $default	reduce using rule 34 (expression)



state 65

    statement  ->  ID @6 relop expression .   (rule 30)
    expression  ->  expression . arithmetic expression   (rule 33)

    ADD 	shift, and go to state 76
    SUB 	shift, and go to state 77
    MULT	shift, and go to state 78
    DIV 	shift, and go to state 79

    $default	reduce using rule 30 (statement)

    arithmetic	go to state 80



state 66

    return  ->  RETURN @8 value . ';'   (rule 55)

    ';' 	shift, and go to state 81



state 67

    body  ->  PRINT @2 '(' value ')' . ';'   (rule 14)

    ';' 	shift, and go to state 82



state 68

    body  ->  IF @1 '(' condition ')' . '{' body '}' else   (rule 10)

    '{' 	shift, and go to state 83



state 69

    value  ->  SCAN @7 '(' . datatype ')'   (rule 53)

    VOID	shift, and go to state 1
    INT 	shift, and go to state 2
    FLOAT	shift, and go to state 3
    BOOL	shift, and go to state 4
    CHAR	shift, and go to state 5
    STR 	shift, and go to state 6

    datatype	go to state 84



state 70

    condition  ->  condition . AND condition   (rule 19)
    condition  ->  condition AND condition .   (rule 19)
    condition  ->  condition . OR condition   (rule 20)

    AND 	shift, and go to state 58
    OR  	shift, and go to state 59

    AND 	[reduce using rule 19 (condition)]
    OR  	[reduce using rule 19 (condition)]
    $default	reduce using rule 19 (condition)



state 71

    condition  ->  condition . AND condition   (rule 19)
    condition  ->  condition . OR condition   (rule 20)
    condition  ->  condition OR condition .   (rule 20)

    AND 	shift, and go to state 58
    OR  	shift, and go to state 59

    AND 	[reduce using rule 20 (condition)]
    OR  	[reduce using rule 20 (condition)]
    $default	reduce using rule 20 (condition)



state 72

    body  ->  WHILE '(' condition ')' '{' . body '}'   (rule 15)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17

    body	go to state 85
    statement	go to state 19



state 73

    condition  ->  value relop value .   (rule 21)

    $default	reduce using rule 21 (condition)



state 74

    init  ->  '=' . expression   (rule 31)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 53
    FALSE	shift, and go to state 54
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    expression	go to state 86
    value	go to state 64



state 75

    statement  ->  DECLARE datatype ID @4 init .   (rule 26)

    $default	reduce using rule 26 (statement)



state 76

    arithmetic  ->  ADD .   (rule 35)

    $default	reduce using rule 35 (arithmetic)



state 77

    arithmetic  ->  SUB .   (rule 36)

    $default	reduce using rule 36 (arithmetic)



state 78

    arithmetic  ->  MULT .   (rule 37)

    $default	reduce using rule 37 (arithmetic)



state 79

    arithmetic  ->  DIV .   (rule 38)

    $default	reduce using rule 38 (arithmetic)



state 80

    expression  ->  expression arithmetic . expression   (rule 33)

    SCAN	shift, and go to state 32
    TRUE	shift, and go to state 53
    FALSE	shift, and go to state 54
    NUM 	shift, and go to state 35
    FLOAT_NUM	shift, and go to state 36
    ID  	shift, and go to state 37
    STR 	shift, and go to state 38
    CHARACTER	shift, and go to state 39

    expression	go to state 87
    value	go to state 64



state 81

    return  ->  RETURN @8 value ';' .   (rule 55)

    $default	reduce using rule 55 (return)



state 82

    body  ->  PRINT @2 '(' value ')' ';' .   (rule 14)

    $default	reduce using rule 14 (body)



state 83

    body  ->  IF @1 '(' condition ')' '{' . body '}' else   (rule 10)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17

    body	go to state 88
    statement	go to state 19



state 84

    value  ->  SCAN @7 '(' datatype . ')'   (rule 53)

    ')' 	shift, and go to state 89



state 85

    body  ->  body . body   (rule 12)
    body  ->  WHILE '(' condition ')' '{' body . '}'   (rule 15)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17
    '}' 	shift, and go to state 90

    body	go to state 27
    statement	go to state 19



state 86

    init  ->  '=' expression .   (rule 31)
    expression  ->  expression . arithmetic expression   (rule 33)

    ADD 	shift, and go to state 76
    SUB 	shift, and go to state 77
    MULT	shift, and go to state 78
    DIV 	shift, and go to state 79

    $default	reduce using rule 31 (init)

    arithmetic	go to state 80



state 87

    expression  ->  expression . arithmetic expression   (rule 33)
    expression  ->  expression arithmetic expression .   (rule 33)

    ADD 	shift, and go to state 76
    SUB 	shift, and go to state 77
    MULT	shift, and go to state 78
    DIV 	shift, and go to state 79

    ADD 	[reduce using rule 33 (expression)]
    SUB 	[reduce using rule 33 (expression)]
    MULT	[reduce using rule 33 (expression)]
    DIV 	[reduce using rule 33 (expression)]
    $default	reduce using rule 33 (expression)

    arithmetic	go to state 80



state 88

    body  ->  IF @1 '(' condition ')' '{' body . '}' else   (rule 10)
    body  ->  body . body   (rule 12)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17
    '}' 	shift, and go to state 91

    body	go to state 27
    statement	go to state 19



state 89

    value  ->  SCAN @7 '(' datatype ')' .   (rule 53)

    $default	reduce using rule 53 (value)



state 90

    body  ->  WHILE '(' condition ')' '{' body '}' .   (rule 15)

    $default	reduce using rule 15 (body)



state 91

    body  ->  IF @1 '(' condition ')' '{' body '}' . else   (rule 10)

    ELSE	shift, and go to state 92

    $default	reduce using rule 18 (else)

    else	go to state 93



state 92

    else  ->  ELSE . @3 '{' body '}'   (rule 17)

    $default	reduce using rule 16 (@3)

    @3  	go to state 94



state 93

    body  ->  IF @1 '(' condition ')' '{' body '}' else .   (rule 10)

    $default	reduce using rule 10 (body)



state 94

    else  ->  ELSE @3 . '{' body '}'   (rule 17)

    '{' 	shift, and go to state 95



state 95

    else  ->  ELSE @3 '{' . body '}'   (rule 17)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17

    body	go to state 96
    statement	go to state 19



state 96

    body  ->  body . body   (rule 12)
    else  ->  ELSE @3 '{' body . '}'   (rule 17)

    PRINT	shift, and go to state 13
    IF  	shift, and go to state 14
    WHILE	shift, and go to state 15
    DECLARE	shift, and go to state 16
    ID  	shift, and go to state 17
    '}' 	shift, and go to state 97

    body	go to state 27
    statement	go to state 19



state 97

    else  ->  ELSE @3 '{' body '}' .   (rule 17)

    $default	reduce using rule 17 (else)



state 98

    $   	go to state 99



state 99

    $   	go to state 100



state 100

    $default	accept
